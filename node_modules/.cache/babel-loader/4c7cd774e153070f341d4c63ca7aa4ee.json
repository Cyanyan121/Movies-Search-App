{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive - HKUST Connect\\\\02 \\u524D\\u7AEF\\u7EC3\\u624B\\u9879\\u76EE\\\\movieSearchApp\\\\src\\\\searchMovies.js\";\n\n/* \r\n    Create the SearchMovies component\r\n    -- Form with a className of form\r\n    -- Label with htmlFor=\"query\" and a className of label\r\n    -- Input of type text with a name of \"query\" and a placeholder\r\n    -- Button with ClassName of button and a type of submit\r\n*/\nimport React, { useState } from \"react\";\nimport './App.css';\nimport MovieCard from \"./movieCard\";\nexport default function SearchMovies() {\n  // state: 1. input query  2. movies\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async e => {\n    e.preventDefault(); // use Fetch API to request movie data from tmdb API\n\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=d9955252c6a76032ee2da0f3798fa1b9&query=${query}&include_adult=false`;\n    const response = await fetch(url);\n    const data = await response.json();\n    setMovies(data.results);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => searchMovies(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"query\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Movie Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    name: \"query\",\n    placeholder: \"i.e. Harry Potter\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, movies.filter(movie => movie.poster_path).map(movie => /*#__PURE__*/React.createElement(MovieCard, {\n    movie: movie,\n    key: movie.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/OneDrive - HKUST Connect/02 前端练手项目/movieSearchApp/src/searchMovies.js"],"names":["React","useState","MovieCard","SearchMovies","query","setQuery","movies","setMovies","searchMovies","e","preventDefault","url","response","fetch","data","json","results","target","value","filter","movie","poster_path","map","id"],"mappings":";;AAAA;;;;;;;AAQA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,SAASC,YAAT,GAAuB;AAClC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF,GAD8B,CAE9B;;AACA,UAAMC,GAAG,GAAI,4FAA2FP,KAAM,sBAA9G;AAEA,UAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAR,IAAAA,SAAS,CAACO,IAAI,CAACE,OAAN,CAAT;AACH,GARD;;AAUA,sBACI,uDACA;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEP,CAAC,IAAID,YAAY,CAACC,CAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC,OAA1C;AACI,IAAA,WAAW,EAAC,mBADhB;AAEI,IAAA,KAAK,EAAEL,KAFX;AAGI,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAMI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADA,eAUA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,MAAM,CAACa,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACC,WAA/B,EAA4CC,GAA5C,CAAiDF,KAAD,iBAC7C,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,KAAlB;AAAyB,IAAA,GAAG,EAAEA,KAAK,CAACG,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAVA,CADJ;AAkBH","sourcesContent":["/* \r\n    Create the SearchMovies component\r\n    -- Form with a className of form\r\n    -- Label with htmlFor=\"query\" and a className of label\r\n    -- Input of type text with a name of \"query\" and a placeholder\r\n    -- Button with ClassName of button and a type of submit\r\n*/\r\n\r\nimport React, {useState} from \"react\";\r\nimport './App.css';\r\nimport MovieCard from \"./movieCard\";\r\n\r\nexport default function SearchMovies(){\r\n    // state: 1. input query  2. movies\r\n    const [query, setQuery] = useState(\"\");\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const searchMovies = async (e) => {\r\n        e.preventDefault();\r\n        // use Fetch API to request movie data from tmdb API\r\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=d9955252c6a76032ee2da0f3798fa1b9&query=${query}&include_adult=false`;\r\n\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setMovies(data.results);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form className=\"form\" onSubmit={e => searchMovies(e)}>\r\n            <label className=\"label\" htmlFor=\"query\">Movie Name</label>\r\n            <input className=\"input\" type=\"text\" name=\"query\"\r\n                placeholder=\"i.e. Harry Potter\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}/>\r\n            <button className=\"button\" type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        <div className=\"card-list\">\r\n            {movies.filter((movie) => movie.poster_path).map((movie) => (\r\n                <MovieCard movie={movie} key={movie.id}/>\r\n            ))}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}